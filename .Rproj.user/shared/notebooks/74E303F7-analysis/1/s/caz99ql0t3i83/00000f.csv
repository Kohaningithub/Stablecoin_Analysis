"0","# Check if topic modeling produced results"
"0","if(!is.null(results$topics$model)) {"
"0","  topics <- results$topics$model"
"0","  "
"0","  # Create topic interpretations"
"0","  topic_interpretations <- data.frame("
"0","    topic = paste0(""X"", 1:ncol(topics$theta)),"
"0","    interpretation = c("
"0","      ""Exchange Deposits"", ""Arbitrage Activity"", ""Liquidations"","
"0","      ""Whale Transfers"", ""Retail Panic"", ""Institutional Activity"","
"0","      ""Cross-chain Bridges"", ""DEX Swaps"", ""Lending Platforms"","
"0","      ""Staking Withdrawals"""
"0","    )[1:ncol(topics$theta)]"
"0","  )"
"0","  "
"0","  # Create better visualization of topic terms"
"0","  top_terms <- data.frame()"
"0","  "
"0","  for(k in 1:ncol(topics$theta)) {"
"0","    top_pairs <- head(sort(topics$theta[,k], decreasing = TRUE), 10)"
"0","    topic_terms <- data.frame("
"0","      topic = paste(""Topic"", k),"
"0","      interpretation = topic_interpretations$interpretation[k],"
"0","      term = names(top_pairs),"
"0","      weight = top_pairs"
"0","    )"
"0","    top_terms <- rbind(top_terms, topic_terms)"
"0","  }"
"0","  "
"0","  # Shorten Ethereum addresses for readability"
"0","  top_terms <- top_terms %>%"
"0","    mutate("
"0","      short_term = sapply(term, function(addr) {"
"0","        parts <- strsplit(addr, ""_"")[[1]]"
"0","        if(length(parts) == 2) {"
"0","          paste0(substr(parts[1], 1, 8), ""..._"", substr(parts[2], 1, 8), ""..."")"
"0","        } else {"
"0","          substr(addr, 1, 16)"
"0","        }"
"0","      })"
"0","    )"
"0","  "
"0","  # Plot with interpretations and shortened addresses"
"0","  ggplot(top_terms, aes(x = reorder(short_term, weight), y = weight, fill = topic)) +"
"0","    geom_col() +"
"0","    facet_wrap(~paste0(topic, "": "", interpretation), scales = ""free_y"") +"
"0","    coord_flip() +"
"0","    labs(title = ""Top Address Pairs by Transaction Pattern Topic"","
"0","         subtitle = ""Higher weights indicate more characteristic address pairs for each topic"","
"0","         x = ""Address Pair (shortened)"", y = ""Weight"") +"
"0","    theme(axis.text.y = element_text(size = 8))"
"0","  "
"0","  # Topic prevalence over time"
"0","  topic_time <- data.frame("
"0","    date = as.Date(rownames(topics$omega)),"
"0","    topics$omega"
"0","  ) %>%"
"0","    pivot_longer("
"0","      cols = -date,"
"0","      names_to = ""topic"","
"0","      values_to = ""weight"""
"0","    ) %>%"
"0","    left_join(topic_interpretations, by = ""topic"")"
"0","  "
"0","  # Plot topic prevalence with proper labels"
"0","  ggplot(topic_time, aes(x = date, y = weight, color = interpretation)) +"
"0","    geom_line() +"
"0","    geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dashed"") +"
"0","    geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dashed"") +"
"0","    labs(title = ""Transaction Pattern Topics Over Time"","
"0","         x = ""Date"", y = ""Topic Weight"", color = ""Topic Type"") +"
"0","    theme_minimal()"
"0","  "
"0","  # Analyze topic prevalence by period"
"0","  topic_by_period <- topic_time %>%"
"0","    mutate("
"0","      period = case_when("
"0","        date < as.Date(""2022-05-08"") ~ ""pre_crash"","
"0","        date <= as.Date(""2022-05-15"") ~ ""crash_period"","
"0","        TRUE ~ ""post_crash"""
"0","      )"
"0","    ) %>%"
"0","    group_by(period, interpretation) %>%"
"0","    summarize("
"0","      avg_weight = mean(weight, na.rm = TRUE),"
"0","      .groups = ""drop"""
"0","    ) %>%"
"0","    arrange(period, desc(avg_weight))"
"0","  "
"0","  # Plot topic prevalence by period"
"0","  ggplot(topic_by_period, aes(x = reorder(interpretation, avg_weight), "
"0","                             y = avg_weight, fill = period)) +"
"0","    geom_bar(stat = ""identity"", position = ""dodge"") +"
"0","    coord_flip() +"
"0","    labs(title = ""Transaction Pattern Topics by Period"","
"0","         x = ""Topic Type"", y = ""Average Weight"", fill = ""Period"") +"
"0","    theme_minimal()"
"0","} else {"
"0","  cat(""Topic modeling results not available\n"")"
"0","  "
"0","  # If we have transaction data, perform simple pattern analysis"
"0","  if(exists(""transactions"")) {"
"0","    # Analyze transaction patterns by day"
"0","    daily_patterns <- transactions %>%"
"0","      group_by(token, date) %>%"
"0","      summarize("
"0","        transaction_count = n(),"
"0","        unique_senders = n_distinct(from_address),"
"0","        unique_receivers = n_distinct(to_address),"
"0","        avg_transaction = mean(value_numeric, na.rm = TRUE),"
"0","        median_transaction = median(value_numeric, na.rm = TRUE),"
"0","        max_transaction = max(value_numeric, na.rm = TRUE),"
"0","        .groups = ""drop"""
"0","      ) %>%"
"0","      mutate("
"0","        period = case_when("
"0","          date < as.Date(""2022-05-08"") ~ ""pre_crash"","
"0","          date <= as.Date(""2022-05-15"") ~ ""crash_period"","
"0","          TRUE ~ ""post_crash"""
"0","        )"
"0","      )"
"0","    "
"0","    # Plot transaction counts over time"
"0","    ggplot(daily_patterns, aes(x = date, y = transaction_count, color = token)) +"
"0","      geom_line() +"
"0","      geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dashed"") +"
"0","      geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dashed"") +"
"0","      labs(title = ""Daily Transaction Counts by Token"","
"0","           x = ""Date"", y = ""Transaction Count"")"
"0","  }"
"0","}"
