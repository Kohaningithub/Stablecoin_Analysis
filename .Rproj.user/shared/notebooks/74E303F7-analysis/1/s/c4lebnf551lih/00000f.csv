"0","# More robust period analysis that handles different date formats"
"0","robust_period_analysis <- function() {"
"0","  if(is.null(results$stability$daily)) {"
"0","    cat(""No stability data available\n"")"
"0","    return(NULL)"
"0","  }"
"0","  "
"0","  # Print the structure of the date column to diagnose"
"0","  cat(""Date column structure:\n"")"
"0","  str(results$stability$daily$date)"
"0","  "
"0","  # Print first few dates to see format"
"0","  cat(""First few dates in the data:\n"")"
"0","  head(results$stability$daily$date)"
"0","  "
"0","  # Try to ensure dates are in proper Date format"
"0","  stability_data <- results$stability$daily"
"0","  "
"0","  # Check if date is already a Date object"
"0","  if(!inherits(stability_data$date, ""Date"")) {"
"0","    cat(""Converting date column to Date format...\n"")"
"0","    # Try different approaches to convert to Date"
"0","    tryCatch({"
"0","      stability_data$date <- as.Date(stability_data$date)"
"0","    }, error = function(e) {"
"0","      cat(""Standard conversion failed:"", e$message, ""\n"")"
"0","      # Try parsing with different formats"
"0","      tryCatch({"
"0","        stability_data$date <- as.Date(stability_data$date, format = ""%Y-%m-%d"")"
"0","      }, error = function(e) {"
"0","        cat(""Format %Y-%m-%d failed:"", e$message, ""\n"")"
"0","        # Try another format"
"0","        tryCatch({"
"0","          stability_data$date <- as.Date(stability_data$date, format = ""%m/%d/%Y"")"
"0","        }, error = function(e) {"
"0","          cat(""Format %m/%d/%Y failed:"", e$message, ""\n"")"
"0","          # One more attempt with numeric conversion"
"0","          if(is.numeric(stability_data$date)) {"
"0","            cat(""Trying to convert numeric dates...\n"")"
"0","            # If numeric, might be days since epoch"
"0","            stability_data$date <- as.Date(stability_data$date, origin = ""1970-01-01"")"
"0","          }"
"0","        })"
"0","      })"
"0","    })"
"0","  }"
"0","  "
"0","  # Check if conversion worked"
"0","  if(!inherits(stability_data$date, ""Date"")) {"
"0","    cat(""Could not convert dates to Date format. Using manual period assignment.\n"")"
"0","    "
"0","    # Create a period column based on row position or other logic"
"0","    # This is a fallback if date conversion fails"
"0","    stability_data$period <- ""unknown"""
"0","    "
"0","    # Try to use any available date information to assign periods"
"0","    if(""period"" %in% names(stability_data)) {"
"0","      cat(""Using existing period column\n"")"
"0","    } else if(nrow(stability_data) >= 30) {"
"0","      # If we have enough rows, try to split into thirds as a rough approximation"
"0","      n_rows <- nrow(stability_data)"
"0","      stability_data$period <- case_when("
"0","        row_number() <= n_rows/3 ~ ""pre_crash"","
"0","        row_number() <= 2*n_rows/3 ~ ""crash"","
"0","        TRUE ~ ""post_crash"""
"0","      )"
"0","      cat(""Created approximate periods based on row position\n"")"
"0","    }"
"0","  } else {"
"0","    # Dates converted successfully"
"0","    cat(""Date conversion successful. Date range:"", "
"0","        format(min(stability_data$date)), ""to"", format(max(stability_data$date)), ""\n"")"
"0","    "
"0","    # Define periods"
"0","    stability_data$period <- case_when("
"0","      stability_data$date < as.Date(""2022-05-08"") ~ ""pre_crash"","
"0","      stability_data$date <= as.Date(""2022-05-15"") ~ ""crash"","
"0","      TRUE ~ ""post_crash"""
"0","    )"
"0","  }"
"0","  "
"0","  # Summarize by period and token"
"0","  period_summary <- stability_data %>%"
"0","    group_by(token, period) %>%"
"0","    summarize("
"0","      observations = n(),"
"0","      mean_deviation = mean(peg_deviation, na.rm = TRUE),"
"0","      max_deviation = max(peg_deviation, na.rm = TRUE),"
"0","      min_deviation = min(peg_deviation, na.rm = TRUE),"
"0","      .groups = ""drop"""
"0","    )"
"0","  "
"0","  # Print summary"
"0","  cat(""\nPeriod summary:\n"")"
"0","  print(period_summary)"
"0","  "
"0","  # Create visualizations"
"0","  if(nrow(period_summary) > 0) {"
"0","    # Mean deviation by period"
"0","    p1 <- ggplot(period_summary, aes(x = token, y = mean_deviation, fill = period)) +"
"0","      geom_bar(stat = ""identity"", position = ""dodge"") +"
"0","      labs(title = ""Mean Peg Deviation by Period"","
"0","           x = ""Token"", y = ""Mean Deviation"") +"
"0","      theme_minimal() +"
"0","      theme(axis.text.x = element_text(angle = 45, hjust = 1))"
"0","    "
"0","    print(p1)"
"0","    "
"0","    # Max deviation by period"
"0","    p2 <- ggplot(period_summary, aes(x = token, y = max_deviation, fill = period)) +"
"0","      geom_bar(stat = ""identity"", position = ""dodge"") +"
"0","      labs(title = ""Maximum Peg Deviation by Period"","
"0","           x = ""Token"", y = ""Maximum Deviation"") +"
"0","      theme_minimal() +"
"0","      theme(axis.text.x = element_text(angle = 45, hjust = 1))"
"0","    "
"0","    print(p2)"
"0","  }"
"0","  "
"0","  # Alternative: Create a time series plot"
"0","  if(inherits(stability_data$date, ""Date"")) {"
"0","    p3 <- ggplot(stability_data, aes(x = date, y = peg_deviation, color = token)) +"
"0","      geom_line() +"
"0","      geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dashed"") +"
"0","      geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dashed"") +"
"0","      labs(title = ""Peg Deviation Over Time"","
"0","           x = ""Date"", y = ""Peg Deviation"") +"
"0","      theme_minimal()"
"0","    "
"0","    print(p3)"
"0","    "
"0","    # Separate plot for each token"
"0","    p4 <- ggplot(stability_data, aes(x = date, y = peg_deviation)) +"
"0","      geom_line() +"
"0","      geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dashed"") +"
"0","      geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dashed"") +"
"0","      facet_wrap(~token, scales = ""free_y"") +"
"0","      labs(title = ""Peg Deviation by Token"","
"0","           x = ""Date"", y = ""Peg Deviation"") +"
"0","      theme_minimal()"
"0","    "
"0","    print(p4)"
"0","  }"
"0","  "
"0","  return(period_summary)"
"0","}"
"0",""
"0","# Run robust period analysis"
"0","robust_period_results <- robust_period_analysis()"
"1","Date column structure:
"
"1"," "
"1",""
"1","Date"
"1",""
"1","[1:1290]"
"1",""
"1",", format: "
"1",""
"1","""4516388-10-11"" ""4516388-10-11"" ""4516388-10-11"" ""4516388-10-11"" ""4516388-10-11"" ""4516388-10-11"""
"1",""
"1"," ..."
"1",""
"1","
"
"1","First few dates in the data:
"
"1","Date conversion successful. Date range:"
"1"," "
"1","4516388-10-11"
"1"," "
"1","to"
"1"," "
"1","4567011-08-02"
"1"," "
"1","
"
"1","
Period summary:
"
