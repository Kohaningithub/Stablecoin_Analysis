"0","# Streamlined prediction visualizations"
"0","visualize_key_predictions <- function(model_results) {"
"0","  if(is.null(model_results) || length(model_results$models) == 0) {"
"0","    cat(""No model results to visualize\n"")"
"0","    return(NULL)"
"0","  }"
"0","  "
"0","  # For each token"
"0","  for(token_name in names(model_results$models)) {"
"0","    token_models <- model_results$models[[token_name]]"
"0","    "
"0","    # Get test data with predictions"
"0","    test_data <- token_models$test_data"
"0","    "
"0","    # Skip if no test data"
"0","    if(is.null(test_data)) {"
"0","      cat(""No test data available for"", token_name, ""\n"")"
"0","      next"
"0","    }"
"0","    "
"0","    # 1. Compare predictions (if LASSO is available)"
"0","    if(""predicted_lasso"" %in% names(test_data)) {"
"0","      test_data_long <- test_data %>%"
"0","        select(date, peg_deviation, predicted_lm, predicted_lasso) %>%"
"0","        pivot_longer(cols = c(peg_deviation, predicted_lm, predicted_lasso),"
"0","                    names_to = ""type"", values_to = ""value"") %>%"
"0","        mutate(type = case_when("
"0","          type == ""peg_deviation"" ~ ""Actual"","
"0","          type == ""predicted_lm"" ~ ""Linear Regression"","
"0","          type == ""predicted_lasso"" ~ ""LASSO"","
"0","          TRUE ~ type"
"0","        ))"
"0","      "
"0","      p1 <- ggplot(test_data_long, aes(x = date, y = value, color = type)) +"
"0","        geom_line(size = 1) +"
"0","        geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dotted"") +"
"0","        geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dotted"") +"
"0","        labs(title = paste(""Prediction Comparison for"", token_name),"
"0","             subtitle = paste(""RMSE - LR:"", round(sqrt(mean((test_data$predicted_lm - test_data$peg_deviation)^2)), 6),"
"0","                             ""LASSO:"", round(sqrt(mean((test_data$predicted_lasso - test_data$peg_deviation)^2)), 6)),"
"0","             x = ""Date"", y = ""Peg Deviation"", color = ""Model"") +"
"0","        scale_color_manual(values = c(""Actual"" = ""black"", "
"0","                                     ""Linear Regression"" = ""red"","
"0","                                     ""LASSO"" = ""blue"")) +"
"0","        theme_minimal() +"
"0","        theme(legend.position = ""bottom"")"
"0","      "
"0","      print(p1)"
"0","    } else if(""predicted_lm"" %in% names(test_data)) {"
"0","      # If only linear regression is available"
"0","      test_data_long <- test_data %>%"
"0","        select(date, peg_deviation, predicted_lm) %>%"
"0","        pivot_longer(cols = c(peg_deviation, predicted_lm),"
"0","                    names_to = ""type"", values_to = ""value"") %>%"
"0","        mutate(type = case_when("
"0","          type == ""peg_deviation"" ~ ""Actual"","
"0","          type == ""predicted_lm"" ~ ""Linear Regression"","
"0","          TRUE ~ type"
"0","        ))"
"0","      "
"0","      p1 <- ggplot(test_data_long, aes(x = date, y = value, color = type)) +"
"0","        geom_line(size = 1) +"
"0","        geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dotted"") +"
"0","        geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dotted"") +"
"0","        labs(title = paste(""Prediction Comparison for"", token_name),"
"0","             subtitle = paste(""RMSE:"", round(sqrt(mean((test_data$predicted_lm - test_data$peg_deviation)^2)), 6)),"
"0","             x = ""Date"", y = ""Peg Deviation"", color = ""Model"") +"
"0","        scale_color_manual(values = c(""Actual"" = ""black"", "
"0","                                     ""Linear Regression"" = ""red"")) +"
"0","        theme_minimal() +"
"0","        theme(legend.position = ""bottom"")"
"0","      "
"0","      print(p1)"
"0","    }"
"0","    "
"0","    # 2. Actual vs Predicted scatter plot"
"0","    if(""predicted_lasso"" %in% names(test_data)) {"
"0","      # Create a data frame for both models"
"0","      scatter_data <- data.frame("
"0","        actual = rep(test_data$peg_deviation, 2),"
"0","        predicted = c(test_data$predicted_lm, test_data$predicted_lasso),"
"0","        model = rep(c(""Linear Regression"", ""LASSO""), each = nrow(test_data))"
"0","      )"
"0","      "
"0","      p2 <- ggplot(scatter_data, aes(x = actual, y = predicted, color = model)) +"
"0","        geom_point(size = 3, alpha = 0.7) +"
"0","        geom_abline(intercept = 0, slope = 1, linetype = ""dashed"", color = ""gray50"") +"
"0","        labs(title = paste(""Actual vs Predicted for"", token_name),"
"0","             x = ""Actual Peg Deviation"", y = ""Predicted Peg Deviation"","
"0","             color = ""Model"") +"
"0","        scale_color_manual(values = c(""Linear Regression"" = ""red"", ""LASSO"" = ""blue"")) +"
"0","        theme_minimal() +"
"0","        theme(legend.position = ""bottom"")"
"0","      "
"0","      print(p2)"
"0","    } else if(""predicted_lm"" %in% names(test_data)) {"
"0","      p2 <- ggplot(test_data, aes(x = peg_deviation, y = predicted_lm)) +"
"0","        geom_point(size = 3, color = ""red"", alpha = 0.7) +"
"0","        geom_abline(intercept = 0, slope = 1, linetype = ""dashed"", color = ""gray50"") +"
"0","        labs(title = paste(""Actual vs Predicted for"", token_name),"
"0","             subtitle = ""Linear Regression Model"","
"0","             x = ""Actual Peg Deviation"", y = ""Predicted Peg Deviation"") +"
"0","        theme_minimal()"
"0","      "
"0","      print(p2)"
"0","    }"
"0","  }"
"0","}"
"0",""
"0","# Visualize key predictions"
"0","visualize_key_predictions(token_model_results)"
