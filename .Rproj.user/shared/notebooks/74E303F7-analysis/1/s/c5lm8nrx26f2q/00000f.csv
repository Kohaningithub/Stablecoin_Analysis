"0","  # 3. Topic Modeling for Behavior Patterns"
"0","  # Prepare data matrix"
"0","  stability_wide <- results$stability$daily %>%"
"0","    select(date, token, peg_deviation) %>%"
"0","    pivot_wider(names_from = token, values_from = peg_deviation, values_fill = 0)"
"0","  "
"0","  # Extract the date column and convert the rest to a matrix"
"0","  dates <- stability_wide$date"
"0","  stability_matrix <- as.matrix(stability_wide[,-1])"
"0","  "
"0","  # Handle NA values"
"0","  stability_matrix[is.na(stability_matrix)] <- 0"
"0","  "
"0","  # Ensure all values are non-negative"
"0","  min_val <- min(stability_matrix)"
"0","  if(min_val < 0) {"
"0","    stability_matrix <- stability_matrix + abs(min_val)"
"0","  }"
"0","  "
"0","  # Fit topic model"
"0","  library(maptpx)"
"0","  topics_fit <- topics(stability_matrix, K = 2, verb = 0)"
"1","Removed 1 blank documents.
"
"0","  "
"0","  # Extract token-topic distributions"
"0","  token_topics <- t(topics_fit$theta)"
"0","  colnames(token_topics) <- colnames(stability_wide)[-1]"
"0","  "
"0","  # Extract day-topic distributions"
"0","  day_topics <- topics_fit$omega"
"0","  "
"0","  # Skip the redundant token-topic plot and go straight to the time series plot"
"0","  # Add period information to day_topics"
"0","  day_topics_df <- data.frame(day_topics)"
"0","  colnames(day_topics_df) <- paste0(""Pattern_"", 1:ncol(day_topics_df))"
"0","  "
"0","  # Ensure dates and day_topics_df have the same number of rows"
"0","  if(length(dates) != nrow(day_topics_df)) {"
"0","    min_length <- min(length(dates), nrow(day_topics_df))"
"0","    dates <- dates[1:min_length]"
"0","    day_topics_df <- day_topics_df[1:min_length,]"
"0","  }"
"0","  "
"0","  day_topics_df$date <- dates"
"0","  "
"0","  # Add period information"
"0","  day_topics_df <- day_topics_df %>%"
"0","    mutate(period = case_when("
"0","      date < as.Date(""2022-05-08"") ~ ""pre_crash"","
"0","      date <= as.Date(""2022-05-15"") ~ ""crash_period"","
"0","      TRUE ~ ""post_crash"""
"0","    ))"
"0","  "
"0","  # Plot pattern strength over time with better colors and fixed scaling"
"0","  day_topics_long <- day_topics_df %>%"
"0","    pivot_longer(cols = starts_with(""Pattern_""), "
"0","                names_to = ""pattern"", "
"0","                values_to = ""strength"")"
"0",""
"0","  p2 <- ggplot(day_topics_long, aes(x = date, y = strength, color = pattern)) +"
"0","    geom_line(size = 1) +"
"0","    geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dashed"") +"
"0","    geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dashed"") +"
"0","    scale_color_manual(values = c(""Pattern_1"" = ""#FF6B6B"", ""Pattern_2"" = ""#4ECDC4"")) +"
"0","    # Fix the y-axis scale to show the full pattern"
"0","    scale_y_continuous(limits = c(0.47, 0.53)) +"
"0","    # Add a horizontal line at 0.5 to show the balance point"
"0","    geom_hline(yintercept = 0.5, linetype = ""dotted"", color = ""gray50"") +"
"0","    theme_minimal() +"
"0","    theme("
"0","      legend.position = ""right"","
"0","      panel.grid.minor = element_blank(),"
"0","      plot.title = element_text(face = ""bold""),"
"0","      axis.text.x = element_text(angle = 0)"
"0","    ) +"
"0","    labs(title = ""Behavior Pattern Strength Over Time"","
"0","         subtitle = ""Vertical lines mark the crash period (May 8-15, 2022)"","
"0","         x = ""Date"", y = ""Pattern Strength"","
"0","         color = ""Market Regime"")"
"0","  print(p2)"
