"0","# Check the date range in the original data"
"0","cat(""Date range in results$stability$daily:"", "
"0","    format(min(results$stability$daily$date, na.rm = TRUE)), ""to"", "
"0","    format(max(results$stability$daily$date, na.rm = TRUE)), ""\n"")"
"1","Date range in results$stability$daily:"
"1"," "
"1","4516388-10-11"
"1"," "
"1","to"
"1"," "
"1","4567011-08-02"
"1"," "
"1","
"
"0","cat(""Period distribution after mutate:\n"")"
"1","Period distribution after mutate:
"
"0","print(table(stability_check$period))"
"1","
"
"1","post_crash "
"1","
"
"1","      1290 "
"1","
"
"0","# The dates are clearly wrong, so let's recalculate from raw price data"
"0","if(!is.null(results$raw_data$prices)) {"
"0","  cat(""Recalculating stability metrics from raw price data...\n"")"
"0","  "
"0","  # Print the date range in the raw data"
"0","  cat(""Date range in raw price data:"", "
"0","      format(min(results$raw_data$prices$date, na.rm = TRUE)), ""to"", "
"0","      format(max(results$raw_data$prices$date, na.rm = TRUE)), ""\n"")"
"0","  "
"0","  # Create a new calculate_stability_metrics function inline"
"0","  calculate_stability_metrics_fixed <- function(prices) {"
"0","    # Calculate daily stability metrics"
"0","    daily_metrics <- prices %>%"
"0","      group_by(token, date) %>%"
"0","      summarize("
"0","        peg_deviation = ifelse(token != ""WLUNA"", abs(close - 1), NA),  # Deviation from $1 peg"
"0","        volatility = (high - low) / close,  # Daily volatility"
"0","        volume = ifelse(""volume"" %in% names(prices), volume, 0),  # Trading volume"
"0","        .groups = ""drop"""
"0","      )"
"0","    "
"0","    # Ensure proper period assignment"
"0","    daily_metrics$period <- case_when("
"0","      daily_metrics$date < as.Date(""2022-05-08"") ~ ""pre_crash"","
"0","      daily_metrics$date <= as.Date(""2022-05-15"") ~ ""crash_period"","
"0","      TRUE ~ ""post_crash"""
"0","    )"
"0","    "
"0","    # Calculate period-level metrics"
"0","    period_metrics <- daily_metrics %>%"
"0","      group_by(token, period) %>%"
"0","      summarize("
"0","        mean_peg_deviation = mean(peg_deviation, na.rm = TRUE),"
"0","        max_peg_deviation = max(peg_deviation, na.rm = TRUE),"
"0","        stress_ratio = ifelse(mean_peg_deviation > 0, max_peg_deviation / mean_peg_deviation, NA),"
"0","        mean_volatility = mean(volatility, na.rm = TRUE),"
"0","        mean_volume = mean(volume, na.rm = TRUE),"
"0","        .groups = ""drop"""
"0","      )"
"0","    "
"0","    return(list("
"0","      daily = daily_metrics,"
"0","      period = period_metrics"
"0","    ))"
"0","  }"
"0","  "
"0","  # Calculate new stability metrics"
"0","  new_stability <- calculate_stability_metrics_fixed(results$raw_data$prices)"
"0","  "
"0","  # Check the period distribution in the new data"
"0","  cat(""Period distribution in recalculated data:\n"")"
"0","  print(table(new_stability$daily$period))"
"0","  "
"0","  # Now use the new stability data for the summary"
"0","  stability_summary <- new_stability$daily %>%"
"0","    group_by(token, period) %>%"
"0","    summarize("
"0","      mean_peg_deviation = mean(peg_deviation, na.rm = TRUE),"
"0","      max_peg_deviation = max(peg_deviation, na.rm = TRUE),"
"0","      stress_ratio = max_peg_deviation / mean_peg_deviation,"
"0","      .groups = ""drop"""
"0","    ) %>%"
"0","    arrange(period, desc(max_peg_deviation))"
"0","  "
"0","  print(stability_summary)"
"0","  "
"0","  # Better time series plot that handles missing values"
"0","  ggplot(new_stability$daily %>% filter(!is.na(peg_deviation) & peg_deviation > 0), "
"0","         aes(x = date, y = peg_deviation, color = token)) +"
"0","    geom_line() +"
"0","    geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dashed"") +"
"0","    geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dashed"") +"
"0","    scale_y_log10() +"
"0","    labs(title = ""Stablecoin Peg Deviation (Log Scale)"", "
"0","         x = ""Date"", "
"0","         y = ""Deviation from $1 peg (log scale)"")"
"0","} else {"
"0","  cat(""Raw price data not available in results object. Need to reload data.\n"")"
"0","  "
"0","  # Try to load price data directly"
"0","  source(""analysis.R"")"
"0","  all_prices <- load_price_data()"
"0","  "
"0","  if(nrow(all_prices) > 0) {"
"0","    cat(""Successfully loaded price data directly.\n"")"
"0","    "
"0","    # Calculate stability metrics"
"0","    new_stability <- calculate_stability_metrics(all_prices)"
"0","    "
"0","    # Use the new stability data for the summary"
"0","    stability_summary <- new_stability$daily %>%"
"0","      group_by(token, period) %>%"
"0","      summarize("
"0","        mean_peg_deviation = mean(peg_deviation, na.rm = TRUE),"
"0","        max_peg_deviation = max(peg_deviation, na.rm = TRUE),"
"0","        stress_ratio = max_peg_deviation / mean_peg_deviation,"
"0","        .groups = ""drop"""
"0","      ) %>%"
"0","      arrange(period, desc(max_peg_deviation))"
"0","    "
"0","    print(stability_summary)"
"0","  } else {"
"0","    cat(""Could not load price data directly. Please regenerate your results file.\n"")"
"0","  }"
"0","}"
"1","Raw price data not available in results object. Need to reload data.
"
"1","Loading transaction data...
"
"2","|--------------------------------------------------|
|"
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","="
"2","|
"
"1","
=== Token Distribution ===
"
"1","
"
"1","   DAI "
"1","   PAX "
"1","  USDC "
"1","  USDT "
"1","   UST "
"1"," WLUNA "
"1","
"
"1","127075 "
"1","  7605 "
"1","689304 "
"1","605477 "
"1"," 51987 "
"1","148046 "
"1","
"
"1","===========================

"
"1","Loading price data...
"
"1","Trying original config approach for price files...
"
"1","Found"
"1"," "
"1","6"
"1"," "
"1","price files:"
"1"," "
"1","dai_price_data.csv, pax_price_data.csv, usdc_price_data.csv, usdt_price_data.csv, ustc_price_data.csv, wluna_price_data.csv"
"1"," "
"1","
"
"1","Processing price file:"
"1"," "
"1","/Users/kohanchen/Documents/2025_Winter/Big_Data/Final/Final_new/ERC20-stablecoins//price_data/dai_price_data.csv"
"1"," "
"1","
"
"1","Columns in"
"1"," "
"1","DAI"
"1"," "
"1","price data:"
"1"," "
"1","timestamp, open, high, low, close"
"1"," "
"1","
"
"1","No date column found for"
"1"," "
"1","DAI"
"1"," "
"1","- creating one
"
"1","Processing price file:"
"1"," "
"1","/Users/kohanchen/Documents/2025_Winter/Big_Data/Final/Final_new/ERC20-stablecoins//price_data/pax_price_data.csv"
"1"," "
"1","
"
"1","Columns in"
"1"," "
"1","PAX"
"1"," "
"1","price data:"
"1"," "
"1","timestamp, open, high, low, close"
"1"," "
"1","
"
"1","No date column found for"
"1"," "
"1","PAX"
"1"," "
"1","- creating one
"
"1","Processing price file:"
"1"," "
"1","/Users/kohanchen/Documents/2025_Winter/Big_Data/Final/Final_new/ERC20-stablecoins//price_data/usdc_price_data.csv"
"1"," "
"1","
"
"1","Columns in"
"1"," "
"1","USDC"
"1"," "
"1","price data:"
"1"," "
"1","timestamp, open, high, low, close"
"1"," "
"1","
"
"1","No date column found for"
"1"," "
"1","USDC"
"1"," "
"1","- creating one
"
"1","Processing price file:"
"1"," "
"1","/Users/kohanchen/Documents/2025_Winter/Big_Data/Final/Final_new/ERC20-stablecoins//price_data/usdt_price_data.csv"
"1"," "
"1","
"
"1","Columns in"
"1"," "
"1","USDT"
"1"," "
"1","price data:"
"1"," "
"1","timestamp, open, high, low, close"
"1"," "
"1","
"
"1","No date column found for"
"1"," "
"1","USDT"
"1"," "
"1","- creating one
"
"1","Processing price file:"
"1"," "
"1","/Users/kohanchen/Documents/2025_Winter/Big_Data/Final/Final_new/ERC20-stablecoins//price_data/ustc_price_data.csv"
"1"," "
"1","
"
"1","Columns in"
"1"," "
"1","USTC"
"1"," "
"1","price data:"
"1"," "
"1","timestamp, open, high, low, close"
"1"," "
"1","
"
"1","No date column found for"
"1"," "
"1","USTC"
"1"," "
"1","- creating one
"
"1","Processing price file:"
"1"," "
"1","/Users/kohanchen/Documents/2025_Winter/Big_Data/Final/Final_new/ERC20-stablecoins//price_data/wluna_price_data.csv"
"1"," "
"1","
"
"1","Columns in"
"1"," "
"1","WLUNA"
"1"," "
"1","price data:"
"1"," "
"1","timestamp, open, high, low, close"
"1"," "
"1","
"
"1","No date column found for"
"1"," "
"1","WLUNA"
"1"," "
"1","- creating one
"
"1","[1]"
"1"," ""Period summary after date fixing:"""
"1","
"
