"0","# Add stability regime classification to your data"
"0","stability_regimes <- results$stability$daily %>%"
"0","  # Filter out WLUNA as it's not a stablecoin (not pegged to $1)"
"0","  filter(token != ""WLUNA"") %>%"
"0","  group_by(token) %>%"
"0","  arrange(date) %>%"
"0","  mutate("
"0","    # Define regimes based on deviation thresholds"
"0","    stability_regime = case_when("
"0","      peg_deviation > 0.05 ~ ""Depegging"","
"0","      peg_deviation > 0.01 ~ ""Stress"","
"0","      peg_deviation <= 0.01 ~ ""Stable"","
"0","      TRUE ~ ""Stable"" # Handle NA values"
"0","    ),"
"0","    # Convert to factor with correct ordering"
"0","    stability_regime = factor(stability_regime, "
"0","                             levels = c(""Stable"", ""Stress"", ""Depegging""))"
"0","  ) %>%"
"0","  ungroup()"
"0",""
"0","# Visualize regime transitions"
"0","p_regimes <- ggplot(stability_regimes, aes(x = date, y = token, fill = stability_regime)) +"
"0","  geom_tile() +"
"0","  scale_fill_manual(values = c(""Stable"" = ""#66BB6A"", "
"0","                              ""Stress"" = ""#FFC107"", "
"0","                              ""Depegging"" = ""#EF5350"")) +"
"0","  geom_vline(xintercept = as.Date(""2022-05-08""), linetype = ""dashed"") +"
"0","  geom_vline(xintercept = as.Date(""2022-05-15""), linetype = ""dashed"") +"
"0","  labs(title = ""Stablecoin Stability Regimes Over Time"","
"0","       subtitle = ""Visualization of regime transitions before, during, and after crash"","
"0","       x = ""Date"", y = ""Stablecoin"", fill = ""Regime"") +"
"0","  theme_minimal()"
"0",""
"0","print(p_regimes)"
